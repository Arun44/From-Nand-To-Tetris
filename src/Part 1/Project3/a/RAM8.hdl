// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    
    Register(in=in,load=t1,out=g0);
    Register(in=in,load=t2,out=g1);
    Register(in=in,load=t3,out=g2);
    Register(in=in,load=t4,out=g3);
    Register(in=in,load=t5,out=g4);
    Register(in=in,load=t6,out=g5);
    Register(in=in,load=t7,out=g6);
    Register(in=in,load=t8,out=g7);
    DMux8Way(in=load,sel=address,a=t1,b=t2,c=t3,d=t4,e=t5,f=t6,g=t7,h=t8);
    Mux8Way16(a=g0,b=g1,c=g2,d=g3,e=g4,f=g5,g=g6,h=g7,sel=address,out=out);
}