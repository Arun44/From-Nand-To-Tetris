// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
   

    RAM512(in=in,load=t1,address=address[0..8],out=f1);
    RAM512(in=in,load=t2,address=address[0..8],out=f2);
    RAM512(in=in,load=t3,address=address[0..8],out=f3);
    RAM512(in=in,load=t4,address=address[0..8],out=f4);
    RAM512(in=in,load=t5,address=address[0..8],out=f5);
    RAM512(in=in,load=t6,address=address[0..8],out=f6);
    RAM512(in=in,load=t7,address=address[0..8],out=f7);
    RAM512(in=in,load=t8,address=address[0..8],out=f8);
    DMux8Way(in=load,sel=address[9..11],a=t1,b=t2,c=t3,d=t4,e=t5,f=t6,g=t7,h=t8);
    Mux8Way16(a=f1,b=f2,c=f3,d=f4,e=f5,f=f6,g=f7,h=f8,sel=address[9..11],out=out);
}